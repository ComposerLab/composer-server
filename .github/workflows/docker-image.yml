---
name: "composer-server-workflow"

on:
  push:
    branches:
      - master
    tags:
      - "*"
  pull_request:
    branches:
      - master

jobs:
  deploy:
    name: "배포"
    runs-on: "ubuntu-latest"

    steps:
      - name: "체크아웃 코드"
        uses: "actions/checkout@v3"

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'
        
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      
      - name: Build with Gradle
        run: ./gradlew clean build

      - name: Set tag
        id: vars
        run: echo "::set-output name=tag::${GITHUB_REF#refs/*/}"

      - name: AWS 자격 증명 구성
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_SERVER }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_SERVER }}
          aws-region: ${{ secrets.AWS_REGION_SERVER }}

      - name: Amazon ECR에 로그인
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Docker Buildx 설정
        uses: docker/setup-buildx-action@v2

      - name: 이미지 빌드, 태그 지정 및 Amazon ECR에 푸시
        uses: docker/build-push-action@v3
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY_NAME_SERVER }}
          IMAGE_TAG: ${{ steps.vars.outputs.tag }}
        with:
          context: .
          push: true
          tags: ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
          cache-from: type=gha
          cache-to: type=gha, mode=max

      - name: 작업 정의 다운로드
        run: |
          aws ecs describe-task-definition --task-definition composer-server --query taskDefinition > task-definition.json

      - name: Amazon ECS 작업 정의에 새 이미지 ID를 입력
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY_NAME_SERVER }}
          IMAGE_TAG: ${{ steps.vars.outputs.tag }}
        with:
          task-definition: task-definition.json
          container-name: composer-server
          image: ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}

      - name: Amazon ECS 작업 정의 배포
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ secrets.ECS_SERVICE_SERVER }}
          cluster: ${{ secrets.ECS_CLUSTER_SERVER }}
          wait-for-service-stability: true
